
applestore:     file format elf32-i386


Disassembly of section .init:

08048458 <_init>:
 8048458:	53                   	push   %ebx
 8048459:	83 ec 08             	sub    $0x8,%esp
 804845c:	e8 3f 01 00 00       	call   80485a0 <__x86.get_pc_thunk.bx>
 8048461:	81 c3 9f 2b 00 00    	add    $0x2b9f,%ebx
 8048467:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 804846d:	85 c0                	test   %eax,%eax
 804846f:	74 05                	je     8048476 <_init+0x1e>
 8048471:	e8 9a 00 00 00       	call   8048510 <__gmon_start__@plt>
 8048476:	83 c4 08             	add    $0x8,%esp
 8048479:	5b                   	pop    %ebx
 804847a:	c3                   	ret    

Disassembly of section .plt:

08048480 <.plt>:
 8048480:	ff 35 04 b0 04 08    	push   0x804b004
 8048486:	ff 25 08 b0 04 08    	jmp    *0x804b008
 804848c:	00 00                	add    %al,(%eax)
	...

08048490 <read@plt>:
 8048490:	ff 25 0c b0 04 08    	jmp    *0x804b00c
 8048496:	68 00 00 00 00       	push   $0x0
 804849b:	e9 e0 ff ff ff       	jmp    8048480 <.plt>

080484a0 <printf@plt>:
 80484a0:	ff 25 10 b0 04 08    	jmp    *0x804b010
 80484a6:	68 08 00 00 00       	push   $0x8
 80484ab:	e9 d0 ff ff ff       	jmp    8048480 <.plt>

080484b0 <fflush@plt>:
 80484b0:	ff 25 14 b0 04 08    	jmp    *0x804b014
 80484b6:	68 10 00 00 00       	push   $0x10
 80484bb:	e9 c0 ff ff ff       	jmp    8048480 <.plt>

080484c0 <signal@plt>:
 80484c0:	ff 25 18 b0 04 08    	jmp    *0x804b018
 80484c6:	68 18 00 00 00       	push   $0x18
 80484cb:	e9 b0 ff ff ff       	jmp    8048480 <.plt>

080484d0 <alarm@plt>:
 80484d0:	ff 25 1c b0 04 08    	jmp    *0x804b01c
 80484d6:	68 20 00 00 00       	push   $0x20
 80484db:	e9 a0 ff ff ff       	jmp    8048480 <.plt>

080484e0 <__stack_chk_fail@plt>:
 80484e0:	ff 25 20 b0 04 08    	jmp    *0x804b020
 80484e6:	68 28 00 00 00       	push   $0x28
 80484eb:	e9 90 ff ff ff       	jmp    8048480 <.plt>

080484f0 <malloc@plt>:
 80484f0:	ff 25 24 b0 04 08    	jmp    *0x804b024
 80484f6:	68 30 00 00 00       	push   $0x30
 80484fb:	e9 80 ff ff ff       	jmp    8048480 <.plt>

08048500 <puts@plt>:
 8048500:	ff 25 28 b0 04 08    	jmp    *0x804b028
 8048506:	68 38 00 00 00       	push   $0x38
 804850b:	e9 70 ff ff ff       	jmp    8048480 <.plt>

08048510 <__gmon_start__@plt>:
 8048510:	ff 25 2c b0 04 08    	jmp    *0x804b02c
 8048516:	68 40 00 00 00       	push   $0x40
 804851b:	e9 60 ff ff ff       	jmp    8048480 <.plt>

08048520 <exit@plt>:
 8048520:	ff 25 30 b0 04 08    	jmp    *0x804b030
 8048526:	68 48 00 00 00       	push   $0x48
 804852b:	e9 50 ff ff ff       	jmp    8048480 <.plt>

08048530 <__libc_start_main@plt>:
 8048530:	ff 25 34 b0 04 08    	jmp    *0x804b034
 8048536:	68 50 00 00 00       	push   $0x50
 804853b:	e9 40 ff ff ff       	jmp    8048480 <.plt>

08048540 <memset@plt>:
 8048540:	ff 25 38 b0 04 08    	jmp    *0x804b038
 8048546:	68 58 00 00 00       	push   $0x58
 804854b:	e9 30 ff ff ff       	jmp    8048480 <.plt>

08048550 <asprintf@plt>:
 8048550:	ff 25 3c b0 04 08    	jmp    *0x804b03c
 8048556:	68 60 00 00 00       	push   $0x60
 804855b:	e9 20 ff ff ff       	jmp    8048480 <.plt>

08048560 <atoi@plt>:
 8048560:	ff 25 40 b0 04 08    	jmp    *0x804b040
 8048566:	68 68 00 00 00       	push   $0x68
 804856b:	e9 10 ff ff ff       	jmp    8048480 <.plt>

Disassembly of section .text:

08048570 <_start>:
 8048570:	31 ed                	xor    %ebp,%ebp
 8048572:	5e                   	pop    %esi
 8048573:	89 e1                	mov    %esp,%ecx
 8048575:	83 e4 f0             	and    $0xfffffff0,%esp
 8048578:	50                   	push   %eax
 8048579:	54                   	push   %esp
 804857a:	52                   	push   %edx
 804857b:	68 70 8d 04 08       	push   $0x8048d70
 8048580:	68 00 8d 04 08       	push   $0x8048d00
 8048585:	51                   	push   %ecx
 8048586:	56                   	push   %esi
 8048587:	68 a6 8c 04 08       	push   $0x8048ca6
 804858c:	e8 9f ff ff ff       	call   8048530 <__libc_start_main@plt>
 8048591:	f4                   	hlt    
 8048592:	66 90                	xchg   %ax,%ax
 8048594:	66 90                	xchg   %ax,%ax
 8048596:	66 90                	xchg   %ax,%ax
 8048598:	66 90                	xchg   %ax,%ax
 804859a:	66 90                	xchg   %ax,%ax
 804859c:	66 90                	xchg   %ax,%ax
 804859e:	66 90                	xchg   %ax,%ax

080485a0 <__x86.get_pc_thunk.bx>:
 80485a0:	8b 1c 24             	mov    (%esp),%ebx
 80485a3:	c3                   	ret    
 80485a4:	66 90                	xchg   %ax,%ax
 80485a6:	66 90                	xchg   %ax,%ax
 80485a8:	66 90                	xchg   %ax,%ax
 80485aa:	66 90                	xchg   %ax,%ax
 80485ac:	66 90                	xchg   %ax,%ax
 80485ae:	66 90                	xchg   %ax,%ax

080485b0 <deregister_tm_clones>:
 80485b0:	b8 4f b0 04 08       	mov    $0x804b04f,%eax
 80485b5:	2d 4c b0 04 08       	sub    $0x804b04c,%eax
 80485ba:	83 f8 06             	cmp    $0x6,%eax
 80485bd:	77 01                	ja     80485c0 <deregister_tm_clones+0x10>
 80485bf:	c3                   	ret    
 80485c0:	b8 00 00 00 00       	mov    $0x0,%eax
 80485c5:	85 c0                	test   %eax,%eax
 80485c7:	74 f6                	je     80485bf <deregister_tm_clones+0xf>
 80485c9:	55                   	push   %ebp
 80485ca:	89 e5                	mov    %esp,%ebp
 80485cc:	83 ec 18             	sub    $0x18,%esp
 80485cf:	c7 04 24 4c b0 04 08 	movl   $0x804b04c,(%esp)
 80485d6:	ff d0                	call   *%eax
 80485d8:	c9                   	leave  
 80485d9:	c3                   	ret    
 80485da:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

080485e0 <register_tm_clones>:
 80485e0:	b8 4c b0 04 08       	mov    $0x804b04c,%eax
 80485e5:	2d 4c b0 04 08       	sub    $0x804b04c,%eax
 80485ea:	c1 f8 02             	sar    $0x2,%eax
 80485ed:	89 c2                	mov    %eax,%edx
 80485ef:	c1 ea 1f             	shr    $0x1f,%edx
 80485f2:	01 d0                	add    %edx,%eax
 80485f4:	d1 f8                	sar    %eax
 80485f6:	75 01                	jne    80485f9 <register_tm_clones+0x19>
 80485f8:	c3                   	ret    
 80485f9:	ba 00 00 00 00       	mov    $0x0,%edx
 80485fe:	85 d2                	test   %edx,%edx
 8048600:	74 f6                	je     80485f8 <register_tm_clones+0x18>
 8048602:	55                   	push   %ebp
 8048603:	89 e5                	mov    %esp,%ebp
 8048605:	83 ec 18             	sub    $0x18,%esp
 8048608:	89 44 24 04          	mov    %eax,0x4(%esp)
 804860c:	c7 04 24 4c b0 04 08 	movl   $0x804b04c,(%esp)
 8048613:	ff d2                	call   *%edx
 8048615:	c9                   	leave  
 8048616:	c3                   	ret    
 8048617:	89 f6                	mov    %esi,%esi
 8048619:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048620 <__do_global_dtors_aux>:
 8048620:	80 3d 64 b0 04 08 00 	cmpb   $0x0,0x804b064
 8048627:	75 13                	jne    804863c <__do_global_dtors_aux+0x1c>
 8048629:	55                   	push   %ebp
 804862a:	89 e5                	mov    %esp,%ebp
 804862c:	83 ec 08             	sub    $0x8,%esp
 804862f:	e8 7c ff ff ff       	call   80485b0 <deregister_tm_clones>
 8048634:	c6 05 64 b0 04 08 01 	movb   $0x1,0x804b064
 804863b:	c9                   	leave  
 804863c:	f3 c3                	repz ret 
 804863e:	66 90                	xchg   %ax,%ax

08048640 <frame_dummy>:
 8048640:	a1 10 af 04 08       	mov    0x804af10,%eax
 8048645:	85 c0                	test   %eax,%eax
 8048647:	74 1f                	je     8048668 <frame_dummy+0x28>
 8048649:	b8 00 00 00 00       	mov    $0x0,%eax
 804864e:	85 c0                	test   %eax,%eax
 8048650:	74 16                	je     8048668 <frame_dummy+0x28>
 8048652:	55                   	push   %ebp
 8048653:	89 e5                	mov    %esp,%ebp
 8048655:	83 ec 18             	sub    $0x18,%esp
 8048658:	c7 04 24 10 af 04 08 	movl   $0x804af10,(%esp)
 804865f:	ff d0                	call   *%eax
 8048661:	c9                   	leave  
 8048662:	e9 79 ff ff ff       	jmp    80485e0 <register_tm_clones>
 8048667:	90                   	nop
 8048668:	e9 73 ff ff ff       	jmp    80485e0 <register_tm_clones>

0804866d <menu>:
 804866d:	55                   	push   %ebp
 804866e:	89 e5                	mov    %esp,%ebp
 8048670:	83 ec 18             	sub    $0x18,%esp
 8048673:	c7 04 24 90 8d 04 08 	movl   $0x8048d90,(%esp)
 804867a:	e8 81 fe ff ff       	call   8048500 <puts@plt>
 804867f:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8048686:	00 
 8048687:	c7 04 24 9d 8d 04 08 	movl   $0x8048d9d,(%esp)
 804868e:	e8 0d fe ff ff       	call   80484a0 <printf@plt>
 8048693:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)
 804869a:	00 
 804869b:	c7 04 24 b0 8d 04 08 	movl   $0x8048db0,(%esp)
 80486a2:	e8 f9 fd ff ff       	call   80484a0 <printf@plt>
 80486a7:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)
 80486ae:	00 
 80486af:	c7 04 24 d4 8d 04 08 	movl   $0x8048dd4,(%esp)
 80486b6:	e8 e5 fd ff ff       	call   80484a0 <printf@plt>
 80486bb:	c7 44 24 04 04 00 00 	movl   $0x4,0x4(%esp)
 80486c2:	00 
 80486c3:	c7 04 24 f8 8d 04 08 	movl   $0x8048df8,(%esp)
 80486ca:	e8 d1 fd ff ff       	call   80484a0 <printf@plt>
 80486cf:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%esp)
 80486d6:	00 
 80486d7:	c7 04 24 15 8e 04 08 	movl   $0x8048e15,(%esp)
 80486de:	e8 bd fd ff ff       	call   80484a0 <printf@plt>
 80486e3:	c7 44 24 04 06 00 00 	movl   $0x6,0x4(%esp)
 80486ea:	00 
 80486eb:	c7 04 24 23 8e 04 08 	movl   $0x8048e23,(%esp)
 80486f2:	e8 a9 fd ff ff       	call   80484a0 <printf@plt>
 80486f7:	c9                   	leave  
 80486f8:	c3                   	ret    

080486f9 <list>:
 80486f9:	55                   	push   %ebp
 80486fa:	89 e5                	mov    %esp,%ebp
 80486fc:	83 ec 18             	sub    $0x18,%esp
 80486ff:	c7 04 24 2d 8e 04 08 	movl   $0x8048e2d,(%esp)
 8048706:	e8 f5 fd ff ff       	call   8048500 <puts@plt>
 804870b:	c7 44 24 08 c7 00 00 	movl   $0xc7,0x8(%esp)
 8048712:	00 
 8048713:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 804871a:	00 
 804871b:	c7 04 24 41 8e 04 08 	movl   $0x8048e41,(%esp)
 8048722:	e8 79 fd ff ff       	call   80484a0 <printf@plt>
 8048727:	c7 44 24 08 2b 01 00 	movl   $0x12b,0x8(%esp)
 804872e:	00 
 804872f:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)
 8048736:	00 
 8048737:	c7 04 24 55 8e 04 08 	movl   $0x8048e55,(%esp)
 804873e:	e8 5d fd ff ff       	call   80484a0 <printf@plt>
 8048743:	c7 44 24 08 f3 01 00 	movl   $0x1f3,0x8(%esp)
 804874a:	00 
 804874b:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)
 8048752:	00 
 8048753:	c7 04 24 6e 8e 04 08 	movl   $0x8048e6e,(%esp)
 804875a:	e8 41 fd ff ff       	call   80484a0 <printf@plt>
 804875f:	c7 44 24 08 8f 01 00 	movl   $0x18f,0x8(%esp)
 8048766:	00 
 8048767:	c7 44 24 04 04 00 00 	movl   $0x4,0x4(%esp)
 804876e:	00 
 804876f:	c7 04 24 84 8e 04 08 	movl   $0x8048e84,(%esp)
 8048776:	e8 25 fd ff ff       	call   80484a0 <printf@plt>
 804877b:	c7 44 24 08 c7 00 00 	movl   $0xc7,0x8(%esp)
 8048782:	00 
 8048783:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%esp)
 804878a:	00 
 804878b:	c7 04 24 9b 8e 04 08 	movl   $0x8048e9b,(%esp)
 8048792:	e8 09 fd ff ff       	call   80484a0 <printf@plt>
 8048797:	c9                   	leave  
 8048798:	c3                   	ret    

08048799 <my_read>:
 8048799:	55                   	push   %ebp
 804879a:	89 e5                	mov    %esp,%ebp
 804879c:	83 ec 28             	sub    $0x28,%esp
 804879f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 80487a6:	8b 45 0c             	mov    0xc(%ebp),%eax
 80487a9:	89 44 24 08          	mov    %eax,0x8(%esp)
 80487ad:	8b 45 08             	mov    0x8(%ebp),%eax
 80487b0:	89 44 24 04          	mov    %eax,0x4(%esp)
 80487b4:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 80487bb:	e8 d0 fc ff ff       	call   8048490 <read@plt>
 80487c0:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80487c3:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
 80487c7:	75 0e                	jne    80487d7 <my_read+0x3e>
 80487c9:	c7 04 24 b1 8e 04 08 	movl   $0x8048eb1,(%esp)
 80487d0:	e8 2b fd ff ff       	call   8048500 <puts@plt>
 80487d5:	eb 0b                	jmp    80487e2 <my_read+0x49>
 80487d7:	8b 55 f4             	mov    -0xc(%ebp),%edx
 80487da:	8b 45 08             	mov    0x8(%ebp),%eax
 80487dd:	01 d0                	add    %edx,%eax
 80487df:	c6 00 00             	movb   $0x0,(%eax)
 80487e2:	c9                   	leave  
 80487e3:	c3                   	ret    

080487e4 <create>:
 80487e4:	55                   	push   %ebp
 80487e5:	89 e5                	mov    %esp,%ebp
 80487e7:	83 ec 28             	sub    $0x28,%esp
 80487ea:	c7 04 24 10 00 00 00 	movl   $0x10,(%esp)
 80487f1:	e8 fa fc ff ff       	call   80484f0 <malloc@plt>
 80487f6:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80487f9:	8b 55 0c             	mov    0xc(%ebp),%edx
 80487fc:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80487ff:	89 50 04             	mov    %edx,0x4(%eax)
 8048802:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048805:	8b 55 08             	mov    0x8(%ebp),%edx
 8048808:	89 54 24 08          	mov    %edx,0x8(%esp)
 804880c:	c7 44 24 04 be 8e 04 	movl   $0x8048ebe,0x4(%esp)
 8048813:	08 
 8048814:	89 04 24             	mov    %eax,(%esp)
 8048817:	e8 34 fd ff ff       	call   8048550 <asprintf@plt>
 804881c:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804881f:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
 8048826:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048829:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
 8048830:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048833:	c9                   	leave  
 8048834:	c3                   	ret    

08048835 <insert>:
 8048835:	55                   	push   %ebp
 8048836:	89 e5                	mov    %esp,%ebp
 8048838:	83 ec 10             	sub    $0x10,%esp
 804883b:	c7 45 fc 68 b0 04 08 	movl   $0x804b068,-0x4(%ebp)
 8048842:	eb 09                	jmp    804884d <insert+0x18>
 8048844:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048847:	8b 40 08             	mov    0x8(%eax),%eax
 804884a:	89 45 fc             	mov    %eax,-0x4(%ebp)
 804884d:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048850:	8b 40 08             	mov    0x8(%eax),%eax
 8048853:	85 c0                	test   %eax,%eax
 8048855:	75 ed                	jne    8048844 <insert+0xf>
 8048857:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804885a:	8b 55 08             	mov    0x8(%ebp),%edx
 804885d:	89 50 08             	mov    %edx,0x8(%eax)
 8048860:	8b 45 08             	mov    0x8(%ebp),%eax
 8048863:	8b 55 fc             	mov    -0x4(%ebp),%edx
 8048866:	89 50 0c             	mov    %edx,0xc(%eax)
 8048869:	c9                   	leave  
 804886a:	c3                   	ret    

0804886b <add>:
 804886b:	55                   	push   %ebp
 804886c:	89 e5                	mov    %esp,%ebp
 804886e:	83 ec 48             	sub    $0x48,%esp
 8048871:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048877:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804887a:	31 c0                	xor    %eax,%eax
 804887c:	c7 04 24 c1 8e 04 08 	movl   $0x8048ec1,(%esp)
 8048883:	e8 18 fc ff ff       	call   80484a0 <printf@plt>
 8048888:	a1 60 b0 04 08       	mov    0x804b060,%eax
 804888d:	89 04 24             	mov    %eax,(%esp)
 8048890:	e8 1b fc ff ff       	call   80484b0 <fflush@plt>
 8048895:	c7 44 24 04 15 00 00 	movl   $0x15,0x4(%esp)
 804889c:	00 
 804889d:	8d 45 de             	lea    -0x22(%ebp),%eax
 80488a0:	89 04 24             	mov    %eax,(%esp)
 80488a3:	e8 f1 fe ff ff       	call   8048799 <my_read>
 80488a8:	8d 45 de             	lea    -0x22(%ebp),%eax
 80488ab:	89 04 24             	mov    %eax,(%esp)
 80488ae:	e8 ad fc ff ff       	call   8048560 <atoi@plt>
 80488b3:	89 45 d8             	mov    %eax,-0x28(%ebp)
 80488b6:	83 7d d8 05          	cmpl   $0x5,-0x28(%ebp)
 80488ba:	0f 87 8c 00 00 00    	ja     804894c <add+0xe1>
 80488c0:	8b 45 d8             	mov    -0x28(%ebp),%eax
 80488c3:	c1 e0 02             	shl    $0x2,%eax
 80488c6:	05 70 8f 04 08       	add    $0x8048f70,%eax
 80488cb:	8b 00                	mov    (%eax),%eax
 80488cd:	ff e0                	jmp    *%eax
 80488cf:	c7 44 24 04 c7 00 00 	movl   $0xc7,0x4(%esp)
 80488d6:	00 
 80488d7:	c7 04 24 d1 8e 04 08 	movl   $0x8048ed1,(%esp)
 80488de:	e8 01 ff ff ff       	call   80487e4 <create>
 80488e3:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 80488e6:	eb 72                	jmp    804895a <add+0xef>
 80488e8:	c7 44 24 04 2b 01 00 	movl   $0x12b,0x4(%esp)
 80488ef:	00 
 80488f0:	c7 04 24 da 8e 04 08 	movl   $0x8048eda,(%esp)
 80488f7:	e8 e8 fe ff ff       	call   80487e4 <create>
 80488fc:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 80488ff:	eb 59                	jmp    804895a <add+0xef>
 8048901:	c7 44 24 04 f3 01 00 	movl   $0x1f3,0x4(%esp)
 8048908:	00 
 8048909:	c7 04 24 e8 8e 04 08 	movl   $0x8048ee8,(%esp)
 8048910:	e8 cf fe ff ff       	call   80487e4 <create>
 8048915:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8048918:	eb 40                	jmp    804895a <add+0xef>
 804891a:	c7 44 24 04 8f 01 00 	movl   $0x18f,0x4(%esp)
 8048921:	00 
 8048922:	c7 04 24 f3 8e 04 08 	movl   $0x8048ef3,(%esp)
 8048929:	e8 b6 fe ff ff       	call   80487e4 <create>
 804892e:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8048931:	eb 27                	jmp    804895a <add+0xef>
 8048933:	c7 44 24 04 c7 00 00 	movl   $0xc7,0x4(%esp)
 804893a:	00 
 804893b:	c7 04 24 ff 8e 04 08 	movl   $0x8048eff,(%esp)
 8048942:	e8 9d fe ff ff       	call   80487e4 <create>
 8048947:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 804894a:	eb 0e                	jmp    804895a <add+0xef>
 804894c:	c7 04 24 0a 8f 04 08 	movl   $0x8048f0a,(%esp)
 8048953:	e8 a8 fb ff ff       	call   8048500 <puts@plt>
 8048958:	eb 2c                	jmp    8048986 <add+0x11b>
 804895a:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 804895d:	89 04 24             	mov    %eax,(%esp)
 8048960:	e8 d0 fe ff ff       	call   8048835 <insert>
 8048965:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8048968:	8b 00                	mov    (%eax),%eax
 804896a:	89 44 24 04          	mov    %eax,0x4(%esp)
 804896e:	c7 04 24 24 8f 04 08 	movl   $0x8048f24,(%esp)
 8048975:	e8 26 fb ff ff       	call   80484a0 <printf@plt>
 804897a:	c7 04 24 4c 8f 04 08 	movl   $0x8048f4c,(%esp)
 8048981:	e8 7a fb ff ff       	call   8048500 <puts@plt>
 8048986:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048989:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048990:	74 05                	je     8048997 <add+0x12c>
 8048992:	e8 49 fb ff ff       	call   80484e0 <__stack_chk_fail@plt>
 8048997:	c9                   	leave  
 8048998:	c3                   	ret    

08048999 <delete>:
 8048999:	55                   	push   %ebp
 804899a:	89 e5                	mov    %esp,%ebp
 804899c:	83 ec 48             	sub    $0x48,%esp
 804899f:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80489a5:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80489a8:	31 c0                	xor    %eax,%eax
 80489aa:	c7 45 c8 01 00 00 00 	movl   $0x1,-0x38(%ebp)
 80489b1:	a1 70 b0 04 08       	mov    0x804b070,%eax
 80489b6:	89 45 cc             	mov    %eax,-0x34(%ebp)
 80489b9:	c7 04 24 88 8f 04 08 	movl   $0x8048f88,(%esp)
 80489c0:	e8 db fa ff ff       	call   80484a0 <printf@plt>
 80489c5:	a1 60 b0 04 08       	mov    0x804b060,%eax
 80489ca:	89 04 24             	mov    %eax,(%esp)
 80489cd:	e8 de fa ff ff       	call   80484b0 <fflush@plt>
 80489d2:	c7 44 24 04 15 00 00 	movl   $0x15,0x4(%esp)
 80489d9:	00 
 80489da:	8d 45 de             	lea    -0x22(%ebp),%eax
 80489dd:	89 04 24             	mov    %eax,(%esp)
 80489e0:	e8 b4 fd ff ff       	call   8048799 <my_read>
 80489e5:	8d 45 de             	lea    -0x22(%ebp),%eax
 80489e8:	89 04 24             	mov    %eax,(%esp)
 80489eb:	e8 70 fb ff ff       	call   8048560 <atoi@plt>
 80489f0:	89 45 d0             	mov    %eax,-0x30(%ebp)
 80489f3:	eb 63                	jmp    8048a58 <delete+0xbf>
 80489f5:	8b 45 c8             	mov    -0x38(%ebp),%eax
 80489f8:	3b 45 d0             	cmp    -0x30(%ebp),%eax
 80489fb:	75 4e                	jne    8048a4b <delete+0xb2>
 80489fd:	8b 45 cc             	mov    -0x34(%ebp),%eax
 8048a00:	8b 40 08             	mov    0x8(%eax),%eax
 8048a03:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8048a06:	8b 45 cc             	mov    -0x34(%ebp),%eax
 8048a09:	8b 40 0c             	mov    0xc(%eax),%eax
 8048a0c:	89 45 d8             	mov    %eax,-0x28(%ebp)
 8048a0f:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)
 8048a13:	74 09                	je     8048a1e <delete+0x85>
 8048a15:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8048a18:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 8048a1b:	89 50 08             	mov    %edx,0x8(%eax)
 8048a1e:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
 8048a22:	74 09                	je     8048a2d <delete+0x94>
 8048a24:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8048a27:	8b 55 d8             	mov    -0x28(%ebp),%edx
 8048a2a:	89 50 0c             	mov    %edx,0xc(%eax)
 8048a2d:	8b 45 cc             	mov    -0x34(%ebp),%eax
 8048a30:	8b 00                	mov    (%eax),%eax
 8048a32:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048a36:	8b 45 c8             	mov    -0x38(%ebp),%eax
 8048a39:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048a3d:	c7 04 24 98 8f 04 08 	movl   $0x8048f98,(%esp)
 8048a44:	e8 57 fa ff ff       	call   80484a0 <printf@plt>
 8048a49:	eb 13                	jmp    8048a5e <delete+0xc5>
 8048a4b:	83 45 c8 01          	addl   $0x1,-0x38(%ebp)
 8048a4f:	8b 45 cc             	mov    -0x34(%ebp),%eax
 8048a52:	8b 40 08             	mov    0x8(%eax),%eax
 8048a55:	89 45 cc             	mov    %eax,-0x34(%ebp)
 8048a58:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
 8048a5c:	75 97                	jne    80489f5 <delete+0x5c>
 8048a5e:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048a61:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048a68:	74 05                	je     8048a6f <delete+0xd6>
 8048a6a:	e8 71 fa ff ff       	call   80484e0 <__stack_chk_fail@plt>
 8048a6f:	c9                   	leave  
 8048a70:	c3                   	ret    

08048a71 <cart>:
 8048a71:	55                   	push   %ebp
 8048a72:	89 e5                	mov    %esp,%ebp
 8048a74:	56                   	push   %esi
 8048a75:	53                   	push   %ebx
 8048a76:	83 ec 40             	sub    $0x40,%esp
 8048a79:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048a7f:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8048a82:	31 c0                	xor    %eax,%eax
 8048a84:	c7 45 d0 01 00 00 00 	movl   $0x1,-0x30(%ebp)
 8048a8b:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
 8048a92:	c7 04 24 c0 8f 04 08 	movl   $0x8048fc0,(%esp)
 8048a99:	e8 02 fa ff ff       	call   80484a0 <printf@plt>
 8048a9e:	a1 60 b0 04 08       	mov    0x804b060,%eax
 8048aa3:	89 04 24             	mov    %eax,(%esp)
 8048aa6:	e8 05 fa ff ff       	call   80484b0 <fflush@plt>
 8048aab:	c7 44 24 04 15 00 00 	movl   $0x15,0x4(%esp)
 8048ab2:	00 
 8048ab3:	8d 45 de             	lea    -0x22(%ebp),%eax
 8048ab6:	89 04 24             	mov    %eax,(%esp)
 8048ab9:	e8 db fc ff ff       	call   8048799 <my_read>
 8048abe:	0f b6 45 de          	movzbl -0x22(%ebp),%eax
 8048ac2:	3c 79                	cmp    $0x79,%al
 8048ac4:	75 5a                	jne    8048b20 <cart+0xaf>
 8048ac6:	c7 04 24 e5 8f 04 08 	movl   $0x8048fe5,(%esp)
 8048acd:	e8 2e fa ff ff       	call   8048500 <puts@plt>
 8048ad2:	a1 70 b0 04 08       	mov    0x804b070,%eax
 8048ad7:	89 45 d8             	mov    %eax,-0x28(%ebp)
 8048ada:	eb 3e                	jmp    8048b1a <cart+0xa9>
 8048adc:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8048adf:	8b 48 04             	mov    0x4(%eax),%ecx
 8048ae2:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8048ae5:	8b 10                	mov    (%eax),%edx
 8048ae7:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8048aea:	8d 58 01             	lea    0x1(%eax),%ebx
 8048aed:	89 5d d0             	mov    %ebx,-0x30(%ebp)
 8048af0:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
 8048af4:	89 54 24 08          	mov    %edx,0x8(%esp)
 8048af8:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048afc:	c7 04 24 f4 8f 04 08 	movl   $0x8048ff4,(%esp)
 8048b03:	e8 98 f9 ff ff       	call   80484a0 <printf@plt>
 8048b08:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8048b0b:	8b 40 04             	mov    0x4(%eax),%eax
 8048b0e:	01 45 d4             	add    %eax,-0x2c(%ebp)
 8048b11:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8048b14:	8b 40 08             	mov    0x8(%eax),%eax
 8048b17:	89 45 d8             	mov    %eax,-0x28(%ebp)
 8048b1a:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)
 8048b1e:	75 bc                	jne    8048adc <cart+0x6b>
 8048b20:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8048b23:	8b 75 f4             	mov    -0xc(%ebp),%esi
 8048b26:	65 33 35 14 00 00 00 	xor    %gs:0x14,%esi
 8048b2d:	74 05                	je     8048b34 <cart+0xc3>
 8048b2f:	e8 ac f9 ff ff       	call   80484e0 <__stack_chk_fail@plt>
 8048b34:	83 c4 40             	add    $0x40,%esp
 8048b37:	5b                   	pop    %ebx
 8048b38:	5e                   	pop    %esi
 8048b39:	5d                   	pop    %ebp
 8048b3a:	c3                   	ret    

08048b3b <checkout>:
 8048b3b:	55                   	push   %ebp
 8048b3c:	89 e5                	mov    %esp,%ebp
 8048b3e:	83 ec 38             	sub    $0x38,%esp
 8048b41:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048b47:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8048b4a:	31 c0                	xor    %eax,%eax
 8048b4c:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%ebp)
 8048b53:	e8 19 ff ff ff       	call   8048a71 <cart>
 8048b58:	89 45 d8             	mov    %eax,-0x28(%ebp)
 8048b5b:	81 7d d8 06 1c 00 00 	cmpl   $0x1c06,-0x28(%ebp)
 8048b62:	75 3d                	jne    8048ba1 <checkout+0x66>
 8048b64:	c7 04 24 02 90 04 08 	movl   $0x8049002,(%esp)
 8048b6b:	e8 90 f9 ff ff       	call   8048500 <puts@plt>
 8048b70:	c7 44 24 08 13 90 04 	movl   $0x8049013,0x8(%esp)
 8048b77:	08 
 8048b78:	c7 44 24 04 be 8e 04 	movl   $0x8048ebe,0x4(%esp)
 8048b7f:	08 
 8048b80:	8d 45 e0             	lea    -0x20(%ebp),%eax
 8048b83:	89 04 24             	mov    %eax,(%esp)
 8048b86:	e8 c5 f9 ff ff       	call   8048550 <asprintf@plt>
 8048b8b:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
 8048b92:	8d 45 e0             	lea    -0x20(%ebp),%eax
 8048b95:	89 04 24             	mov    %eax,(%esp)
 8048b98:	e8 98 fc ff ff       	call   8048835 <insert>
 8048b9d:	83 45 d8 01          	addl   $0x1,-0x28(%ebp)
 8048ba1:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8048ba4:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048ba8:	c7 04 24 1c 90 04 08 	movl   $0x804901c,(%esp)
 8048baf:	e8 ec f8 ff ff       	call   80484a0 <printf@plt>
 8048bb4:	c7 04 24 28 90 04 08 	movl   $0x8049028,(%esp)
 8048bbb:	e8 40 f9 ff ff       	call   8048500 <puts@plt>
 8048bc0:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048bc3:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048bca:	74 05                	je     8048bd1 <checkout+0x96>
 8048bcc:	e8 0f f9 ff ff       	call   80484e0 <__stack_chk_fail@plt>
 8048bd1:	c9                   	leave  
 8048bd2:	c3                   	ret    

08048bd3 <handler>:
 8048bd3:	55                   	push   %ebp
 8048bd4:	89 e5                	mov    %esp,%ebp
 8048bd6:	83 ec 38             	sub    $0x38,%esp
 8048bd9:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048bdf:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8048be2:	31 c0                	xor    %eax,%eax
 8048be4:	c7 04 24 4b 90 04 08 	movl   $0x804904b,(%esp)
 8048beb:	e8 b0 f8 ff ff       	call   80484a0 <printf@plt>
 8048bf0:	a1 60 b0 04 08       	mov    0x804b060,%eax
 8048bf5:	89 04 24             	mov    %eax,(%esp)
 8048bf8:	e8 b3 f8 ff ff       	call   80484b0 <fflush@plt>
 8048bfd:	c7 44 24 04 15 00 00 	movl   $0x15,0x4(%esp)
 8048c04:	00 
 8048c05:	8d 45 de             	lea    -0x22(%ebp),%eax
 8048c08:	89 04 24             	mov    %eax,(%esp)
 8048c0b:	e8 89 fb ff ff       	call   8048799 <my_read>
 8048c10:	8d 45 de             	lea    -0x22(%ebp),%eax
 8048c13:	89 04 24             	mov    %eax,(%esp)
 8048c16:	e8 45 f9 ff ff       	call   8048560 <atoi@plt>
 8048c1b:	89 45 d8             	mov    %eax,-0x28(%ebp)
 8048c1e:	83 7d d8 06          	cmpl   $0x6,-0x28(%ebp)
 8048c22:	77 32                	ja     8048c56 <handler+0x83>
 8048c24:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8048c27:	c1 e0 02             	shl    $0x2,%eax
 8048c2a:	05 88 90 04 08       	add    $0x8049088,%eax
 8048c2f:	8b 00                	mov    (%eax),%eax
 8048c31:	ff e0                	jmp    *%eax
 8048c33:	e8 c1 fa ff ff       	call   80486f9 <list>
 8048c38:	eb 29                	jmp    8048c63 <handler+0x90>
 8048c3a:	e8 2c fc ff ff       	call   804886b <add>
 8048c3f:	eb 22                	jmp    8048c63 <handler+0x90>
 8048c41:	e8 53 fd ff ff       	call   8048999 <delete>
 8048c46:	eb 1b                	jmp    8048c63 <handler+0x90>
 8048c48:	e8 24 fe ff ff       	call   8048a71 <cart>
 8048c4d:	eb 14                	jmp    8048c63 <handler+0x90>
 8048c4f:	e8 e7 fe ff ff       	call   8048b3b <checkout>
 8048c54:	eb 0d                	jmp    8048c63 <handler+0x90>
 8048c56:	c7 04 24 4e 90 04 08 	movl   $0x804904e,(%esp)
 8048c5d:	e8 9e f8 ff ff       	call   8048500 <puts@plt>
 8048c62:	90                   	nop
 8048c63:	e9 7c ff ff ff       	jmp    8048be4 <handler+0x11>
 8048c68:	90                   	nop
 8048c69:	c7 04 24 68 90 04 08 	movl   $0x8049068,(%esp)
 8048c70:	e8 8b f8 ff ff       	call   8048500 <puts@plt>
 8048c75:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048c78:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048c7f:	74 05                	je     8048c86 <handler+0xb3>
 8048c81:	e8 5a f8 ff ff       	call   80484e0 <__stack_chk_fail@plt>
 8048c86:	c9                   	leave  
 8048c87:	c3                   	ret    

08048c88 <timeout>:
 8048c88:	55                   	push   %ebp
 8048c89:	89 e5                	mov    %esp,%ebp
 8048c8b:	83 ec 18             	sub    $0x18,%esp
 8048c8e:	c7 04 24 a4 90 04 08 	movl   $0x80490a4,(%esp)
 8048c95:	e8 66 f8 ff ff       	call   8048500 <puts@plt>
 8048c9a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8048ca1:	e8 7a f8 ff ff       	call   8048520 <exit@plt>

08048ca6 <main>:
 8048ca6:	55                   	push   %ebp
 8048ca7:	89 e5                	mov    %esp,%ebp
 8048ca9:	83 e4 f0             	and    $0xfffffff0,%esp
 8048cac:	83 ec 10             	sub    $0x10,%esp
 8048caf:	c7 44 24 04 88 8c 04 	movl   $0x8048c88,0x4(%esp)
 8048cb6:	08 
 8048cb7:	c7 04 24 0e 00 00 00 	movl   $0xe,(%esp)
 8048cbe:	e8 fd f7 ff ff       	call   80484c0 <signal@plt>
 8048cc3:	c7 04 24 3c 00 00 00 	movl   $0x3c,(%esp)
 8048cca:	e8 01 f8 ff ff       	call   80484d0 <alarm@plt>
 8048ccf:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)
 8048cd6:	00 
 8048cd7:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 8048cde:	00 
 8048cdf:	c7 04 24 68 b0 04 08 	movl   $0x804b068,(%esp)
 8048ce6:	e8 55 f8 ff ff       	call   8048540 <memset@plt>
 8048ceb:	e8 7d f9 ff ff       	call   804866d <menu>
 8048cf0:	e8 de fe ff ff       	call   8048bd3 <handler>
 8048cf5:	c9                   	leave  
 8048cf6:	c3                   	ret    
 8048cf7:	66 90                	xchg   %ax,%ax
 8048cf9:	66 90                	xchg   %ax,%ax
 8048cfb:	66 90                	xchg   %ax,%ax
 8048cfd:	66 90                	xchg   %ax,%ax
 8048cff:	90                   	nop

08048d00 <__libc_csu_init>:
 8048d00:	55                   	push   %ebp
 8048d01:	57                   	push   %edi
 8048d02:	31 ff                	xor    %edi,%edi
 8048d04:	56                   	push   %esi
 8048d05:	53                   	push   %ebx
 8048d06:	e8 95 f8 ff ff       	call   80485a0 <__x86.get_pc_thunk.bx>
 8048d0b:	81 c3 f5 22 00 00    	add    $0x22f5,%ebx
 8048d11:	83 ec 1c             	sub    $0x1c,%esp
 8048d14:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 8048d18:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 8048d1e:	e8 35 f7 ff ff       	call   8048458 <_init>
 8048d23:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 8048d29:	29 c6                	sub    %eax,%esi
 8048d2b:	c1 fe 02             	sar    $0x2,%esi
 8048d2e:	85 f6                	test   %esi,%esi
 8048d30:	74 27                	je     8048d59 <__libc_csu_init+0x59>
 8048d32:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048d38:	8b 44 24 38          	mov    0x38(%esp),%eax
 8048d3c:	89 2c 24             	mov    %ebp,(%esp)
 8048d3f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048d43:	8b 44 24 34          	mov    0x34(%esp),%eax
 8048d47:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048d4b:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 8048d52:	83 c7 01             	add    $0x1,%edi
 8048d55:	39 f7                	cmp    %esi,%edi
 8048d57:	75 df                	jne    8048d38 <__libc_csu_init+0x38>
 8048d59:	83 c4 1c             	add    $0x1c,%esp
 8048d5c:	5b                   	pop    %ebx
 8048d5d:	5e                   	pop    %esi
 8048d5e:	5f                   	pop    %edi
 8048d5f:	5d                   	pop    %ebp
 8048d60:	c3                   	ret    
 8048d61:	eb 0d                	jmp    8048d70 <__libc_csu_fini>
 8048d63:	90                   	nop
 8048d64:	90                   	nop
 8048d65:	90                   	nop
 8048d66:	90                   	nop
 8048d67:	90                   	nop
 8048d68:	90                   	nop
 8048d69:	90                   	nop
 8048d6a:	90                   	nop
 8048d6b:	90                   	nop
 8048d6c:	90                   	nop
 8048d6d:	90                   	nop
 8048d6e:	90                   	nop
 8048d6f:	90                   	nop

08048d70 <__libc_csu_fini>:
 8048d70:	f3 c3                	repz ret 

Disassembly of section .fini:

08048d74 <_fini>:
 8048d74:	53                   	push   %ebx
 8048d75:	83 ec 08             	sub    $0x8,%esp
 8048d78:	e8 23 f8 ff ff       	call   80485a0 <__x86.get_pc_thunk.bx>
 8048d7d:	81 c3 83 22 00 00    	add    $0x2283,%ebx
 8048d83:	83 c4 08             	add    $0x8,%esp
 8048d86:	5b                   	pop    %ebx
 8048d87:	c3                   	ret    
